plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.vanniktech.maven.publish'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.king.frame.mvvmframe'
    compileSdk build_versions.compileSdk

    defaultConfig {
        minSdk build_versions.minSdk
        targetSdk build_versions.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures{
        dataBinding = true
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_17
        sourceCompatibility JavaVersion.VERSION_17
    }

    lintOptions {
        abortOnError false
        warning 'InvalidPackage'
    }

}

dependencies {
    testImplementation deps.test.junit
    androidTestImplementation deps.test.android_junit
    androidTestImplementation deps.test.espresso
    // appcompat
    compileOnly deps.appcompat

    api deps.core_ktx
    api deps.fragment_ktx

    // okhttp
    api deps.okhttp.okhttp
    api deps.okhttp.logging_interceptor
    // retrofit
    api deps.retrofit.retrofit
    api deps.retrofit.converter_gson
    api deps.gson

    // retrofit-helper
    api deps.retrofit_helper

    // lifecycle
    api deps.lifecycle_runtime_ktx
    api deps.lifecycle_viewmodel_ktx

    // room
    api deps.room.runtime
    api deps.room.room_ktx
    kapt deps.room.compiler

    // hilt
    api deps.dagger.hilt_android
    kapt  deps.dagger.hilt_compiler

    // log
    api deps.timber
    // toast
    api deps.toaster
}

kapt {
    correctErrorTypes true
}